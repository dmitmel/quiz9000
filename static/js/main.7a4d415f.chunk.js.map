{"version":3,"sources":["webpack:///./config/polyfills.js","webpack:///./src/db/firebase.js","webpack:///./src/db/quizzes.js","webpack:///./src/actions/creators/Explore.js","webpack:///./src/actions/creators/fetchedQuizzes.js","webpack:///./src/actions/creators/Library.js","webpack:///./src/actions/creators/NavDrawer.js","webpack:///./src/actions/creators/Settings.js","webpack:///./src/actions/types/Explore.js","webpack:///./src/actions/types/fetchedQuizzes.js","webpack:///./src/actions/types/Library.js","webpack:///./src/actions/types/NavDrawer.js","webpack:///./src/actions/types/Settings.js","webpack:///./src/components/App/App.jsx","webpack:///./src/components/App/LoadingPage.jsx","webpack:///./src/utils/registerServiceWorker.js","webpack:///./src/utils/theme.js","webpack:///./src/reducers/index.js","webpack:///./src/reducers/Explore.js","webpack:///./src/reducers/Library.js","webpack:///./src/reducers/NavDrawer.js","webpack:///./src/reducers/Settings.js","webpack:///./src/reducers/fetchedQuizzes.js","webpack:///./src/utils/store.js","webpack:///./src/index.jsx","webpack:///./src/utils/routerHistory.js"],"names":["__webpack_require__","Object","assign","object_assign__WEBPACK_IMPORTED_MODULE_4___default","a","esm","initializeApp","databaseURL","quizzes_rootRef","database","ref","quizzes_listRef","child","Explore_fetchQuizzes","offset","limit","dispatch","type","types","status","startAt","String","limitToFirst","once","then","snapshot","quizzes","forEach","quizSnapshot","push","val","quizzes_fetchQuizzes","fetchedQuizzes_fetchQuiz","id","prop","orderByChild","equalTo","quiz","Library_addQuiz","data","Library_removeQuiz","NavDrawer_openNav","NavDrawer_closeNav","Settings_openSettings","Settings_closeSettings","Library","react_loadable__WEBPACK_IMPORTED_MODULE_2___default","loader","Promise","all","e","bind","loading","_LoadingPage__WEBPACK_IMPORTED_MODULE_5__","Explore","QuizDetails","__webpack_exports__","react_hot_loader__WEBPACK_IMPORTED_MODULE_1__","module","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","connected_react_router__WEBPACK_IMPORTED_MODULE_4__","history","_utils_routerHistory__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","exact","path","component","render","_ref","match","parseInt","params","to","LoadingPage","classes","material_ui_Progress_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default","className","root","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","isRequired","material_ui_styles_withStyles__WEBPACK_IMPORTED_MODULE_2___default","position","top","left","transform","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","theme","createMuiTheme_default","palette","primary","indigo_default","secondary","pink_default","reducers","redux_es","arguments","length","undefined","ids","action","newIds","i","objectSpread_default","defineProperty_default","NavDrawer","open","Settings","fetchedQuizzes","newQuizzes","utils_store","connected_react_router_lib","routerHistory","lib_default","logOnlyInProduction","name","actionCreators","creators","URL","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","react_dom_default","react_default","es","store","MuiThemeProvider_default","App","document","getElementById","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_0___default","basename"],"mappings":"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","file":"static/js/main.7a4d415f.chunk.js","sourcesContent":["// Firebase polyfills\nimport '@firebase/polyfill/dist/esm/src/shims/Array';\nimport '@firebase/polyfill/dist/esm/src/shims/String';\n\nimport 'es6-promise/auto';\n\n// `fetch()` polyfill for making API calls.\nimport 'whatwg-fetch';\n\n// `Object.assign()` is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nimport assign from 'object-assign';\n\n// React renderer uses `requestAnimationFrame` for splitting rendering between\n// multiple frames. See this video for more information:\n// https://youtu.be/ZCuYPiUIONs\nimport 'raf/polyfill';\n\nObject.assign = assign;\n","import firebase from '@firebase/app';\nimport '@firebase/database';\n\nconst config = {\n  databaseURL: 'https://quiz9000-db.firebaseio.com'\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\nexport const database = firebase.database();\n","/* istanbul ignore file */\n\nimport { database } from './firebase';\n\nexport const rootRef = database.ref('/quizzes');\nexport const listRef = rootRef.child('list');\nexport const lengthRef = rootRef.child('length');\n\nexport function findQuizBy(prop, val) {\n  return listRef\n    .orderByChild(prop)\n    .equalTo(val)\n    .limitToFirst(1)\n    .once('child_added')\n    .then(snapshot => snapshot.val());\n}\n\nexport function fetchQuizzes(offset, limit) {\n  return listRef\n    .startAt(null, String(offset))\n    .limitToFirst(limit)\n    .once('value')\n    .then(snapshot => {\n      const quizzes = [];\n      snapshot.forEach(quizSnapshot => {\n        quizzes.push(quizSnapshot.val());\n      });\n      return quizzes;\n    });\n}\n","import { FETCH_QUIZZES } from '../types';\nimport { fetchQuizzes as dbFetchQuizzes } from '../../db/quizzes';\n\nexport function fetchQuizzes(offset, limit) {\n  return dispatch => {\n    dispatch({\n      type: FETCH_QUIZZES,\n      status: 'loading',\n      offset,\n      limit\n    });\n    return dbFetchQuizzes(offset, limit).then(\n      quizzes => {\n        dispatch({\n          type: FETCH_QUIZZES,\n          status: 'success',\n          offset,\n          limit,\n          quizzes\n        });\n        return quizzes;\n      },\n      () => {\n        dispatch({\n          type: FETCH_QUIZZES,\n          status: 'error',\n          offset,\n          limit\n        });\n      }\n    );\n  };\n}\n","import { FETCH_QUIZ } from '../types';\nimport { findQuizBy } from '../../db/quizzes';\n\nexport function fetchQuiz(id) {\n  return dispatch => {\n    dispatch({ type: FETCH_QUIZ, status: 'loading', id });\n    return findQuizBy('id', id).then(\n      quiz => {\n        dispatch({ type: FETCH_QUIZ, status: 'success', id, quiz });\n        return quiz;\n      },\n      () => {\n        dispatch({ type: FETCH_QUIZ, status: 'error', id });\n      }\n    );\n  };\n}\n","import { ADD_QUIZ, REMOVE_QUIZ } from '../types';\n\nexport function addQuiz(id, data) {\n  return { type: ADD_QUIZ, id, data };\n}\n\nexport function removeQuiz(id) {\n  return { type: REMOVE_QUIZ, id };\n}\n","import { OPEN_NAV, CLOSE_NAV } from '../types';\n\nexport function openNav() {\n  return { type: OPEN_NAV };\n}\n\nexport function closeNav() {\n  return { type: CLOSE_NAV };\n}\n","import { OPEN_SETTINGS, CLOSE_SETTINGS } from '../types';\n\nexport function openSettings() {\n  return { type: OPEN_SETTINGS };\n}\n\nexport function closeSettings() {\n  return { type: CLOSE_SETTINGS };\n}\n","export const FETCH_QUIZZES = '@@Explore/FETCH_QUIZZES';\n","export const FETCH_QUIZ = '@@fetchedQuizzes/FETCH_QUIZ';\n","export const ADD_QUIZ = '@@Library/ADD_QUIZ';\nexport const REMOVE_QUIZ = '@@Library/REMOVE_QUIZ';\n","export const OPEN_NAV = '@@NavDrawer/OPEN';\nexport const CLOSE_NAV = '@@NavDrawer/CLOSE';\n","export const OPEN_SETTINGS = '@@Settings/OPEN';\nexport const CLOSE_SETTINGS = '@@Settings/CLOSE';\n","import React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { hot } from 'react-hot-loader';\nimport Loadable from 'react-loadable';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport LoadingPage from './LoadingPage';\nimport routerHistory from '../../utils/routerHistory';\n\nconst Library = Loadable({\n  loader: () =>\n    import(/* webpackChunkName: \"Library\" */ '../../containers/Library'),\n  loading: LoadingPage\n});\n\nconst Explore = Loadable({\n  loader: () =>\n    import(/* webpackChunkName: \"Explore\" */ '../../containers/Explore'),\n  loading: LoadingPage\n});\n\nconst QuizDetails = Loadable({\n  loader: () =>\n    import(/* webpackChunkName: \"QuizDetails\" */ '../../containers/QuizDetails'),\n  loading: LoadingPage\n});\n\nconst App = () => (\n  <Router history={routerHistory}>\n    <Switch>\n      <Route exact path=\"/library\" component={Library} />\n      <Route exact path=\"/explore\" component={Explore} />\n      <Route\n        exact\n        path=\"/quiz/:id\"\n        render={({ match }) => (\n          <QuizDetails id={parseInt(match.params.id, 10)} />\n        )}\n      />\n      <Redirect to=\"/library\" />\n    </Switch>\n  </Router>\n);\n\nexport default hot(module)(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from 'material-ui/styles/withStyles';\nimport CircularProgress from 'material-ui/Progress/CircularProgress';\n\nconst styles = {\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nconst LoadingPage = ({ classes }) => (\n  <CircularProgress className={classes.root} />\n);\n\nLoadingPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LoadingPage);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import createMuiTheme from 'material-ui/styles/createMuiTheme';\nimport indigo from 'material-ui/colors/indigo';\nimport pink from 'material-ui/colors/pink';\n\nexport default createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: pink,\n    type: 'light'\n  }\n});\n","import { combineReducers } from 'redux';\nimport Explore from './Explore';\nimport Library from './Library';\nimport NavDrawer from './NavDrawer';\nimport Settings from './Settings';\nimport fetchedQuizzes from './fetchedQuizzes';\n\nconst rootReducer = combineReducers({\n  Explore,\n  Library,\n  NavDrawer,\n  Settings,\n  fetchedQuizzes\n});\n\nexport default rootReducer;\n","/* eslint-disable no-plusplus */\n\nimport * as actions from '../actions/types';\n\nexport default function Explore(\n  state = {\n    state: 'success',\n    ids: {}\n  },\n  action\n) {\n  switch (action.type) {\n    case actions.FETCH_QUIZZES: {\n      const newIds = {};\n\n      for (let i = 0; i < action.limit; i++) {\n        newIds[action.offset + i] =\n          action.status === 'success' ? action.quizzes[i].id : undefined;\n      }\n\n      return {\n        ...state,\n        status: action.status,\n        ids: { ...state.ids, ...newIds }\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import * as actions from '../actions/types';\n\nexport default function Library(state = {}, action) {\n  switch (action.type) {\n    case actions.ADD_QUIZ: {\n      return {\n        ...state,\n        [action.id]: action.data\n      };\n    }\n    case actions.REMOVE_QUIZ: {\n      return {\n        ...state,\n        [action.id]: undefined\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as actions from '../actions/types';\n\nexport default function NavDrawer(\n  state = {\n    open: false\n  },\n  action\n) {\n  switch (action.type) {\n    case actions.OPEN_NAV: {\n      return {\n        ...state,\n        open: true\n      };\n    }\n    case actions.CLOSE_NAV: {\n      return {\n        ...state,\n        open: false\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as actions from '../actions/types';\n\nexport default function Settings(\n  state = {\n    open: false\n  },\n  action\n) {\n  switch (action.type) {\n    case actions.OPEN_SETTINGS: {\n      return {\n        ...state,\n        open: true\n      };\n    }\n    case actions.CLOSE_SETTINGS: {\n      return {\n        ...state,\n        open: false\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as actions from '../actions/types';\n\nexport default function fetchedQuizzes(state = {}, action) {\n  switch (action.type) {\n    case actions.FETCH_QUIZ: {\n      return {\n        ...state,\n        [action.id]: {\n          status: action.status,\n          data: action.status === 'success' ? action.quiz : null\n        }\n      };\n    }\n    case actions.FETCH_QUIZZES: {\n      if (action.status !== 'success') return state;\n\n      const newQuizzes = {};\n      action.quizzes.forEach(quiz => {\n        newQuizzes[quiz.id] = {\n          status: 'success',\n          data: quiz\n        };\n      });\n      return { ...state, ...newQuizzes };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension/logOnlyInProduction';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport reducer from '../reducers';\nimport * as actions from '../actions/creators';\nimport routerHistory from '../utils/routerHistory';\n\nconst store = createStore(\n  connectRouter(routerHistory)(reducer),\n  compose(\n    applyMiddleware(thunk, routerMiddleware(routerHistory)),\n    devToolsEnhancer({\n      name: 'Quiz9000',\n      actionCreators: actions\n    })\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxStoreProvider } from 'react-redux';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport 'normalize.css';\nimport registerServiceWorker from './utils/registerServiceWorker';\nimport './resets.css';\nimport App from './components/App';\nimport theme from './utils/theme';\nimport store from './utils/store';\n\nregisterServiceWorker();\n\nwindow.addEventListener('load', () => {\n  ReactDOM.render(\n    <ReduxStoreProvider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </ReduxStoreProvider>,\n    document.getElementById('root')\n  );\n});\n","import createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n"],"sourceRoot":""}